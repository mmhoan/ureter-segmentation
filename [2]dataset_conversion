cd '/home/uk2/바탕화면/GUAI MOON/nnunet_code'
import shutil
from batchgenerators.utilities.file_and_folder_operations import *
from nnunet.paths import nnUNet_raw_data
base = "/home/uk2/바탕화면/GUAI MOON/data_nii2"

task_id = 99#19
task_name = "Ureter_VUE"

foldername = "Task%03.0d_%s" % (task_id, task_name)

out_base = join(nnUNet_raw_data, foldername)
imagestr = join(out_base, "imagesTr")
imagests = join(out_base, "imagesTs")
labelstr = join(out_base, "labelsTr")
maybe_mkdir_p(imagestr)
maybe_mkdir_p(imagests)
maybe_mkdir_p(labelstr)

train_patient_names = []
test_patient_names = []
all_cases = subfolders(base, join=False)

train_patients = all_cases
test_patients = all_cases[-3:]
#train_patients = all_cases[:26]
#test_patients = all_cases[26:]
for p in train_patients:
    curr = join(base, p)
    label_file = join(curr, "segmentation.nii.gz")
    image_file = join(curr, "imaging.nii.gz")
    shutil.copy(image_file, join(imagestr, p + "_0000.nii.gz"))
    shutil.copy(label_file, join(labelstr, p + ".nii.gz"))
    train_patient_names.append(p)

for p in test_patients:
    curr = join(base, p)
    image_file = join(curr, "imaging.nii.gz")
    shutil.copy(image_file, join(imagests, p + "_0000.nii.gz"))
    test_patient_names.append(p)

json_dict = {}
json_dict['name'] = "Ureter"
json_dict['description'] = "Ureter_Segmentation"
json_dict['tensorImageSize'] = "3D"
json_dict['reference'] = "Ureter data for nnunet"
json_dict['licence'] = ""
json_dict['release'] = "0.0"
json_dict['modality'] = {
    "0": "CT",
}
json_dict['labels'] = {
    "0": "background",
    "1": "Ureter"
}

json_dict['numTraining'] = len(train_patient_names)
json_dict['numTest'] = len(test_patient_names)
json_dict['training'] = [{'image': "./imagesTr/%s.nii.gz" % i.split("/")[-1], "label": "./labelsTr/%s.nii.gz" % i.split("/")[-1]} for i in
                         train_patient_names]
json_dict['test'] = ["./imagesTs/%s.nii.gz" % i.split("/")[-1] for i in test_patient_names]

save_json(json_dict, os.path.join(out_base, "dataset.json"))
